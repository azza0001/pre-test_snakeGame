import{Timer}from"./timer.js";import{Quiz}from"./quiz.js";import ProgressBar from"../components/progressBar.js";import questions,{getRandomQuestions}from"./questions.js";const difficulties=["Easy","Medium","Hard"],questionsPerDifficulty={Easy:5,Medium:3,Hard:2};let currentDifficulty="Easy",currentQuiz=null,difficultyIndex=0,timer=null,startTime=null,progressBar=null,studentInfo={name:"",section:""},difficultyStatus={Easy:!1,Medium:!1,Hard:!1};const debugTools={isEnabled:!1,secretCode:"debug",currentCode:"",keyHistory:[],shortcuts:{s:"skipQuestion",a:"autoAnswer",d:"toggleDebugDisplay",r:"resetQuiz"}};let currentTimer=null;function handleDebugShortcut(e){if(debugTools.isEnabled)switch(e){case"s":skipCurrentQuestion();break;case"a":autoAnswerQuestion();break;case"d":toggleDebugDisplay();break;case"r":confirm("Reset quiz? This will clear all progress.")&&location.reload()}}function showDebugMenu(){const e=document.getElementById("debug-menu");e&&e.remove();const t=document.createElement("div");t.id="debug-menu",t.className="debug-menu",t.innerHTML='\n        <div class="debug-header">\n            <h3>Debug Tools</h3>\n            <button class="close-debug">×</button>\n        </div>\n        <div class="debug-buttons">\n            <button class="debug-btn" data-action="skip">Skip Hard Questions</button>\n            <button class="debug-btn" data-action="answer">Skip Easy & Medium</button>\n            <button class="debug-btn" data-action="info">Show Debug Info</button>\n            <button class="debug-btn warning" data-action="reset">Reset Quiz</button>\n        </div>\n    ',document.body.appendChild(t),t.querySelector(".close-debug").addEventListener("click",(()=>t.remove())),t.querySelectorAll(".debug-btn").forEach((e=>{e.addEventListener("click",(e=>{switch(e.target.dataset.action){case"skip":skipCurrentQuestion();break;case"answer":autoAnswerQuestion();break;case"info":toggleDebugDisplay();break;case"reset":resetQuizWithConfirm()}}))}))}function startQuizFlow(){const e=document.getElementById("student-name"),t=document.getElementById("student-section"),n=document.getElementById("privacy-consent"),r=document.querySelector(".privacy-policy");e.value.trim()&&t.value.trim()?n.checked?(studentInfo.name=e.value.trim(),studentInfo.section=t.value.trim(),r&&(r.style.opacity="0",setTimeout((()=>{r.remove()}),300)),document.getElementById("start-screen").style.display="none",document.getElementById("quiz-screen").style.display="block",startNextDifficulty()):alert("Please read and agree to the data privacy policy to continue"):alert("Please enter both your name and section")}function startNextDifficulty(){const e=currentQuiz?[...currentQuiz.results]:[];if(currentDifficulty&&(difficultyStatus[currentDifficulty]=!0),difficultyIndex<difficulties.length){const t=document.getElementById("quiz-screen");t.innerHTML=`\n            <div class="throbber-overlay">\n                <div class="throbber">\n                    <div class="throbber-spinner"></div>\n                    <p>Preparing ${difficulties[difficultyIndex]} Level...</p>\n                </div>\n            </div>`,setTimeout((()=>{currentDifficulty=difficulties[difficultyIndex];const n=getRandomQuestions(currentDifficulty,questionsPerDifficulty[currentDifficulty]);if(0===n.length)return console.warn(`No questions found for difficulty: ${currentDifficulty}`),difficultyIndex++,void startNextDifficulty();t.innerHTML='\n                    <div id="countdown"></div>\n                    <div id="progress-bar"></div>\n                    <div id="question-display" autocomplete="off"></div>\n                    <div id="difficulty-display"></div>\n                    <div id="quiz-progress" class="quiz-progress"></div>\n                ',currentQuiz=new Quiz(n),currentQuiz.results=e,setupQuiz(currentDifficulty)}),1e3)}else endQuiz()}function startQuiz(e){resetQuiz(),difficultyStatus[e]=!1,startTime=Date.now();const t=getRandomQuestions(e);currentQuiz=new Quiz(t),setupQuiz(e),displayQuestion();const n=t.length,r=document.getElementById("quiz-progress");r&&(r.textContent=`Question 1 of ${n}`)}function endDifficulty(e){difficultyStatus[e]=!0,checkAllDifficultiesComplete()}function checkAllDifficultiesComplete(){return Object.values(difficultyStatus).every((e=>e))}function formatFractionQuestion(e){return e=(e=e.replace(/(\d+)\s+(\d+)\/(\d+)/g,((e,t,n,r)=>`<span class="mixed-number">\n              <span class="whole">${t}</span>\n              <span class="fraction">\n                  <span class="numerator">${n}</span>\n                  <span class="denominator">${r}</span>\n              </span>\n          </span>`))).replace(/(\d+)\/(\d+)/g,((e,t,n)=>`<span class="fraction">\n              <span class="numerator">${t}</span>\n              <span class="denominator">${n}</span>\n          </span>`))}function setupQuiz(e){const t=document.getElementById("question-display"),n=document.getElementById("progress-bar"),r=document.getElementById("difficulty-display");if(!t)return;if(t.innerHTML="",n.innerHTML="",n.style.display="Hard"===e?"block":"none",r&&(r.innerHTML=`\n        <div class="difficulty-indicator ${e.toLowerCase()}">\n            <span class="difficulty-label">Difficulty:</span>\n            <span class="difficulty-value">${e}</span>\n        </div>\n    `),"Hard"===e){const u=document.createElement("div");u.id="question-counter",u.className="question-counter",u.textContent=`${currentQuiz.currentQuestionIndex+1}/${currentQuiz.questions.length} left`,t.appendChild(u);const o=document.createElement("div");o.id="current-step",n.appendChild(o);const c=currentQuiz.getCurrentQuestion();window.hardModeState={currentStep:0,steps:c.steps},timer=new Timer(3,updateHardMode,nextStep),progressBar=new ProgressBar("progress-bar",6e3),displayHardModeStep(),timer.start(),progressBar.start()}else{const a=document.createElement("form");a.id="quiz-form";const l=currentQuiz.questions;if(!l||0===l.length)return void console.error("No questions available for difficulty:",e);let d=0;const m=document.createElement("div");m.id="question-counter",m.className="question-counter",m.textContent=`Question ${d+1}/${l.length}`,t.appendChild(m);const f=document.createElement("div");f.id="question-timer",f.className="timer-display",t.appendChild(f);const p=document.createElement("div");function i(){document.getElementById("question-counter").textContent=`Question ${d+1}/${l.length}`;const e=l[d];p.innerHTML=`\n            <div class="question-text flash-question">\n                ${formatFractionQuestion(e.question)}\n            </div>\n            <div class="answer-container">\n                <input type="text" \n                       class="answer-input" \n                       id="current-answer"\n                       required \n                       autocomplete="off"\n                       pattern="${e.isFraction?"\\d+/\\d+":"\\d*\\.?\\d+"}"\n                       placeholder="${e.isFraction?"Enter as a/b":"Enter answer"}"\n                       title="${e.isFraction?"Enter answer as a fraction (e.g., 1/2)":"Please enter a number"}"\n                       onkeydown="if(event.key === 'Enter') { event.preventDefault(); this.nextElementSibling.click(); }">\n                <button type="button" class="submit-answer">Next</button>\n            </div>\n        `;let t=20;Date.now();f.textContent=`Time: ${t}s`;const n=setInterval((()=>{t--,f.textContent=`Time: ${t}s`,t<=0&&(clearInterval(n),function(){const e=l[d];currentQuiz.results||(currentQuiz.results=[]);currentQuiz.results.push({studentName:studentInfo.name,studentSection:studentInfo.section,difficulty:currentDifficulty,question:e.question,userAnswer:null,correctAnswer:e.answer,correct:!1,responseTime:20}),console.log("Added timeout result:",currentQuiz.results[currentQuiz.results.length-1]),d++,d<l.length?i():s()}())}),1e3);p.querySelector(".submit-answer").addEventListener("click",(()=>{if(!document.getElementById("current-answer").value.trim())return void alert("Please enter an answer before continuing");clearInterval(n);const r=document.getElementById("current-answer").value,u=20-t;currentQuiz.results||(currentQuiz.results=[]),currentQuiz.results.push({studentName:studentInfo.name,studentSection:studentInfo.section,difficulty:currentDifficulty,question:e.question,userAnswer:parseFloat(r),correctAnswer:e.answer,correct:parseFloat(r)===e.answer,responseTime:u}),console.log("Added result:",currentQuiz.results[currentQuiz.results.length-1]),d++,d<l.length?i():s()}))}function s(){difficultyIndex++,setTimeout((()=>{startNextDifficulty()}),1e3)}p.className="single-question-container",a.appendChild(p),t.appendChild(a),i()}document.querySelectorAll(".answer-input").forEach((e=>{e.addEventListener("keydown",(t=>{if("Enter"===t.key){t.preventDefault();const n=e.closest(".question-container").querySelector(".submit-answer");n&&n.click()}}))}))}function displayHardModeStep(){const e=window.hardModeState;if(!e||e.currentStep>=e.steps.length)return;const t=e.steps[e.currentStep],n=document.getElementById("current-step");if(!n)return;n.classList.remove("flash-number"),n.offsetWidth;const r=0===e.currentStep?t.value:t.operation+t.value;n.textContent=r,n.classList.add("flash-number")}function nextStep(){const e=window.hardModeState;e&&(e.currentStep++,e.currentStep<e.steps.length?(displayHardModeStep(),timer.reset(),timer.start(),progressBar.reset(),progressBar.start()):showAnswerInput(e.expression))}function showAnswerInput(e){document.getElementById("question-display").innerHTML='\n        <input type="number" \n               id="final-answer" \n               required\n               min="0"\n               step="1"\n               placeholder="Enter your answer"\n               autocomplete="off">\n        <button id="submit-answer">Submit</button>\n    ',document.getElementById("submit-answer").addEventListener("click",(()=>{document.getElementById("final-answer").value.trim()?submitHardModeAnswer():alert("Please enter an answer before submitting")}))}function updateHardMode(e){progressBar.draw(1-e/1)}function displayCurrentQuestion(){if(!currentQuiz||!currentQuiz.questions)return;const e=document.querySelector(".single-question-container"),t=document.getElementById("question-counter");if(!e||!t)return;const n=currentQuiz.questions,r=currentQuiz.currentQuestionIndex;t.textContent=`Question ${r+1}/${n.length}`;const i=n[r];e.innerHTML=`\n        <div class="question-text flash-question">\n            ${formatFractionQuestion(i.question)}\n        </div>\n        <div class="answer-container">\n            <input type="text" \n                   class="answer-input" \n                   id="current-answer"\n                   required \n                   autocomplete="off"\n                   pattern="${i.isFraction?"\\d+/\\d+":"\\d*\\.?\\d+"}"\n                   placeholder="${i.isFraction?"Enter as a/b":"Enter answer"}"\n                   title="${i.isFraction?"Enter answer as a fraction (e.g., 1/2)":"Please enter a number"}">\n            <button type="button" class="submit-answer">Next</button>\n        </div>\n    `,setupQuestionTimer(),setupAnswerSubmission(i)}function setupQuestionTimer(){const e=document.getElementById("question-timer");if(!e)return;currentTimer&&(clearInterval(currentTimer),currentTimer=null);let t=20;return e.textContent=`Time: ${t}s`,currentTimer=setInterval((()=>{t--,e.textContent=`Time: ${t}s`,t<=0&&(clearInterval(currentTimer),currentTimer=null,handleQuestionTimeout())}),1e3),currentTimer}function setupAnswerSubmission(e){const t=document.querySelector(".submit-answer");t&&t.addEventListener("click",(()=>{const t=document.getElementById("current-answer");if(!t?.value.trim())return void alert("Please enter an answer before continuing");const n=20-parseInt(document.getElementById("question-timer").textContent.match(/\d+/)[0]);submitAnswer(e,t.value,n)}))}function submitAnswer(e,t,n){currentTimer&&(clearInterval(currentTimer),currentTimer=null),currentQuiz.results||(currentQuiz.results=[]),currentQuiz.results.push({studentName:studentInfo.name,studentSection:studentInfo.section,difficulty:currentDifficulty,question:e.question,userAnswer:parseFloat(t),correctAnswer:e.answer,correct:parseFloat(t)===e.answer,responseTime:n}),currentQuiz.currentQuestionIndex++,currentQuiz.currentQuestionIndex<currentQuiz.questions.length?displayCurrentQuestion():finishQuizSection()}function displayQuestion(){const e=document.getElementById("current-question");if(!e||!currentQuiz)return;const t=currentQuiz.getCurrentQuestion();if(t){e.textContent=t.question,currentQuiz.startTime=Date.now();const n=`Question ${currentQuiz.currentIndex+1} of ${currentQuiz.questions.length}`,r=document.getElementById("quiz-progress");r&&(r.textContent=n)}}document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("start-button");e.addEventListener("click",startQuizFlow);document.getElementById("start-screen").querySelectorAll('input[type="text"]').forEach((t=>{t.addEventListener("keypress",(n=>{"Enter"===n.key&&(n.preventDefault(),t.nextElementSibling&&"INPUT"===t.nextElementSibling.tagName?t.nextElementSibling.focus():e.click())}))}))})),document.addEventListener("keydown",(e=>{debugTools.currentCode+=e.key.toLowerCase(),debugTools.currentCode.includes(debugTools.secretCode)&&(debugTools.isEnabled=!debugTools.isEnabled,debugTools.currentCode="",debugTools.isEnabled?showDebugMenu():document.getElementById("debug-menu")?.remove()),debugTools.currentCode.length>10&&(debugTools.currentCode=debugTools.currentCode.slice(-10)),debugTools.isEnabled&&e.ctrlKey&&handleDebugShortcut(e.key.toLowerCase())}));class QuizDataTracker{constructor(){this.SHEETS_API_URL="https://script.google.com/macros/s/AKfycbzmXhdfn1gimYmZug-lecKRI34CN2xcmeuuQYvtB4QjqXkVvSC-BVpcTtVuVBMZZJzCFA/exec",this.isSubmitting=!1,this.lastSubmitTime=0,this.minSubmitInterval=2e3}async sendToSpreadsheet(e){try{this.isSubmitting=!0;const t=e.map((e=>({timestamp:e.timestamp,studentName:e.studentName,studentSection:e.studentSection,totalCorrectAnswers:Number(e.totalCorrectAnswers),totalWrongAnswers:Number(e.totalWrongAnswers),averageTimePerQuestion:Number(e.averageTimePerQuestion),totalQuestions:Number(e.totalQuestions),easyCorrect:Number(e.easyCorrect),easyTotal:Number(e.easyTotal),easyPercentage:Number(e.easyPercentage),mediumCorrect:Number(e.mediumCorrect),mediumTotal:Number(e.mediumTotal),mediumPercentage:Number(e.mediumPercentage),hardCorrect:Number(e.hardCorrect),hardTotal:Number(e.hardTotal),hardPercentage:Number(e.hardPercentage)}))),n=new URL(this.SHEETS_API_URL);n.searchParams.append("data",JSON.stringify(t));await fetch(n.toString(),{method:"GET",mode:"no-cors"});return this.lastSubmitTime=Date.now(),console.log("Data sent successfully:",t),!0}catch(e){throw console.error("Error sending data:",e),e}finally{this.isSubmitting=!1}}}const quizDataTracker=new QuizDataTracker;function calculateQuizSummary(e){const t={totalCorrect:0,totalWrong:0,totalTime:0,totalQuestions:e.length,byDifficulty:{Easy:{correct:0,total:0},Medium:{correct:0,total:0},Hard:{correct:0,total:0}}};let n=0;return e.forEach((e=>{e.correct?t.totalCorrect++:t.totalWrong++,"number"!=typeof e.responseTime||isNaN(e.responseTime)||(t.totalTime+=e.responseTime,n++);const r=e.difficulty;t.byDifficulty[r].total++,e.correct&&t.byDifficulty[r].correct++})),t.averageTime=n>0?Number((t.totalTime/n).toFixed(2)):0,Object.keys(t.byDifficulty).forEach((e=>{const n=t.byDifficulty[e];n.percentage=n.total>0?Number((n.correct/n.total*100).toFixed(1)):0})),t}function createThrobber(){return'\n        <div class="throbber-overlay">\n            <div class="throbber">\n                <div class="throbber-spinner"></div>\n                <p>Submitting your results...</p>\n            </div>\n        </div>'}function showIncompleteWarning(e){document.getElementById("quiz-screen").innerHTML=`\n        <div class="incomplete-warning">\n            <h2>Too fast!! DONT DO THAT!.</h2>\n            <p>You still need to complete: ${e}</p>\n            <button id="continue-quiz" class="continue-btn">Refresh the page and try again</button>\n        </div>`,document.getElementById("continue-quiz").addEventListener("click",(()=>{startNextDifficulty()}))}function endQuiz(){const e=calculateQuizSummary(currentQuiz.results),t=document.getElementById("quiz-screen");t.innerHTML=createThrobber();const n=[{timestamp:(new Date).toISOString(),studentName:studentInfo.name,studentSection:studentInfo.section,totalCorrectAnswers:e.totalCorrect||0,totalWrongAnswers:e.totalWrong||0,averageTimePerQuestion:parseFloat(e.averageTime)||0,totalQuestions:e.totalQuestions||0,easyCorrect:e.byDifficulty.Easy.correct||0,easyTotal:e.byDifficulty.Easy.total||0,easyPercentage:e.byDifficulty.Easy.percentage||0,mediumCorrect:e.byDifficulty.Medium.correct||0,mediumTotal:e.byDifficulty.Medium.total||0,mediumPercentage:e.byDifficulty.Medium.percentage||0,hardCorrect:e.byDifficulty.Hard.correct||0,hardTotal:e.byDifficulty.Hard.total||0,hardPercentage:e.byDifficulty.Hard.percentage||0}];if(checkAllDifficultiesComplete())quizDataTracker.sendToSpreadsheet(n).then((()=>{const e=document.createElement("div");e.className="end-screen",e.innerHTML='\n                <h2>Thank you for your response!</h2>\n                <div class="thank-you-image">\n                    <img src="./ThankYou.png" alt="Thank You" />\n                </div>\n                <h2>If you get the high score among all the participants in the snake game, you will win ₱1,000</h2>\n                <a href="https://azza0001.github.io/new-snakeGame/" \n                   target="_blank" \n                   class="snake-game-link">\n                    Play the Snake Game! 🐍\n                </a>\n            ',t.innerHTML="",t.appendChild(e),triggerConfetti()})).catch((e=>{console.error("Error submitting quiz:",e),t.innerHTML='\n                <div class="end-screen error">\n                    <h2>Error submitting results</h2>\n                    <p>Please try again later</p>\n                </div>'}));else{showIncompleteWarning(Object.entries(difficultyStatus).filter((([e,t])=>!t)).map((([e,t])=>e)).join(", "))}}function triggerConfetti(){const e=Date.now()+3e3,t={startVelocity:30,spread:360,ticks:60,zIndex:1e4};function n(e,t){return Math.random()*(t-e)+e}const r=setInterval((function(){const i=e-Date.now();if(i<=0)return clearInterval(r);const s=i/3e3*50;confetti(Object.assign({},t,{particleCount:s,origin:{x:n(.1,.3),y:Math.random()-.2},colors:["#272623","#d6d2b8","#6200ee"]})),confetti(Object.assign({},t,{particleCount:s,origin:{x:n(.7,.9),y:Math.random()-.2},colors:["#272623","#d6d2b8","#6200ee"]}))}),250)}function resetQuiz(){timer&&(timer.stop(),timer=null),progressBar&&(progressBar.reset(),progressBar.stop(),progressBar=null),currentQuiz&&currentQuiz.reset();const e=document.getElementById("question-display"),t=document.getElementById("progress-bar");e&&(e.innerHTML=""),t&&(t.innerHTML="")}function submitHardModeAnswer(){const e=(Date.now()-currentQuiz.startTime)/1e3,t=parseInt(document.getElementById("final-answer").value),n=currentQuiz.getCurrentQuestion(),r=t===n.finalAnswer;currentQuiz.results.push({studentName:studentInfo.name,studentSection:studentInfo.section,difficulty:"Hard",correct:r,responseTime:e,question:n.steps.map((e=>e.operation+e.value)).join(" "),userAnswer:t,correctAnswer:n.finalAnswer}),document.getElementById("final-answer").disabled=!0,document.getElementById("submit-answer").disabled=!0,currentQuiz.currentQuestionIndex++,setTimeout((()=>{currentQuiz.currentQuestionIndex<currentQuiz.questions.length?setupQuiz("Hard"):(difficultyIndex++,startNextDifficulty())}),2e3)}function validateAnswer(e,t,n){if(!n)return Number(e)===Number(t);const r=e=>{if(e.includes("/")){const[t,n]=e.split("/").map(Number);return t/n}return Number(e)},i=r(e),s=r(t);return Math.abs(i-s)<1e-4}function skipCurrentQuestion(){currentQuiz&&(currentTimer&&(clearInterval(currentTimer),currentTimer=null),"Hard"===currentDifficulty?window.hardModeState&&(window.hardModeState.currentStep=window.hardModeState.steps.length,nextStep()):currentQuiz.currentQuestionIndex<currentQuiz.questions.length-1?(currentQuiz.currentQuestionIndex++,displayCurrentQuestion()):finishQuizSection())}function autoAnswerQuestion(){if(!currentQuiz)return;const e=currentQuiz.getCurrentQuestion();if(e)if("Hard"===currentDifficulty){const t=document.getElementById("final-answer");t&&(t.value=e.finalAnswer,document.getElementById("submit-answer")?.click())}else{const t=document.getElementById("current-answer");t&&(t.value=e.answer,document.querySelector(".submit-answer")?.click())}}function toggleDebugDisplay(){const e={currentDifficulty:currentDifficulty,difficultyIndex:difficultyIndex,questionCount:currentQuiz?.questions?.length,currentQuestion:currentQuiz?.getCurrentQuestion(),results:currentQuiz?.results,studentInfo:studentInfo};console.table(e)}function resetQuizWithConfirm(){confirm("Reset quiz? This will clear all progress.")&&location.reload()}